[[plugins]]
repo = 'haya14busa/dein-command.vim'
on_cmd = 'Dein'

[[plugins]]
repo = 'scrooloose/nerdtree'
hook_add = '''
nnoremap <silent><C-n> :NERDTreeToggle<CR>
'''

[[plugins]] # toml syntax
repo = 'cespare/vim-toml'
on_ft = 'toml'

[[plugins]] # vimヘルプ日本語化
repo = 'vim-jp/vimdoc-ja'

[[plugins]]
repo = 'Shougo/neosnippet'
hook_add = '''
  imap <C-k> <Plug>(neosnippet_expand_or_jump)
  smap <C-k> <Plug>(neosnippet_expand_or_jump)
  xmap <C-k> <Plug>(neosnippet_expand_target)
  if has('conceal')
    set conceallevel=2 concealcursor=niv
  endif
'''
on_i  = 1
on_ft = ['snippet']
depends = ['neosnippet-snippets']

[[plugins]]
repo = 'Shougo/denite.nvim'
hook_add = '''
" カレントディレクトリ
nnoremap <silent> <expr><leader>p ":Denite file/rec -split='floating'<CR>"
" バッファ一覧
nnoremap <silent> <expr><leader>o ":Denite buffer -split='floating'<CR>"
" 最近使ったファイルの一覧
nnoremap <silent> <expr><leader>l ":Denite file/old -split='floating'<CR>"

"Denite でバッファ内検索 
nnoremap <silent> <expr><leader>f ":<C-u>Denite grep<CR>"
nnoremap <silent> <expr><leader>g ":<C-u>DeniteCursorWord grep<CR>"

" Define mappings
autocmd FileType denite call s:denite_keymaps()
function! s:denite_keymaps() abort
  nnoremap <silent><buffer><expr> <CR>
  \ denite#do_map('do_action')
  nnoremap <silent><buffer><expr> a
  \ denite#do_map('choose_action')
  nnoremap <silent><buffer><expr> d
  \ denite#do_map('do_action', 'delete')
  nnoremap <silent><buffer><expr> p
  \ denite#do_map('do_action', 'preview')
  nnoremap <silent><buffer><expr> q
  \ denite#do_map('quit')
  nnoremap <silent><buffer><expr> '
  \ denite#do_map('quick_move')
  nnoremap <silent><buffer><expr> i
  \ denite#do_map('open_filter_buffer')
  nnoremap <silent><buffer><expr> <Space>
  \ denite#do_map('toggle_select').'j'
endfunction

autocmd FileType denite-filter call s:filter_settings()
function! s:filter_settings() abort
  imap <silent><buffer> jj <Plug>(denite_filter_quit)q
  imap <silent><buffer> <C-n> <Plug>(denite_filter_quit)ji
  imap <silent><buffer> <C-p> <Plug>(denite_filter_quit)ki
  inoremap <silent><buffer><expr> <CR> denite#do_map('do_action')
  inoremap <silent><buffer><expr> <C-j> denite#do_map('do_action', 'vsplitswitch')
  inoremap <silent><buffer><expr> <C-k> denite#do_map('do_action', 'splitswitch')
  inoremap <silent><buffer> <C-p> <Esc><C-w>p
endfunction

'''
hook_source = '''
let s:denite_options = {
      \ 'prompt' : '>',
      \ 'split': 'floating',
      \ 'start_filter': 1,
      \ 'auto_resize': 1,
      \ 'source_names': 'short',
      \ 'direction': 'botright',
      \ 'highlight_filter_background': 'CursorLine',
      \ 'highlight_matched_char': 'Type',
      \ }
call denite#custom#option('default', s:denite_options)
" TODO: agに変える(file/recだとagの方が早いらしい :h denite)
if executable('rg')
  call denite#custom#var('file/rec', 'command',
        \ ['rg', '--hidden', '--files', '--glob', '!.git', '--glob', '!node_modules', '--glob', '!dist'])
  call denite#custom#var('grep', 'command', ['rg'])

endif
'''

[[plugins]]
repo = 'leafgarland/typescript-vim'
on_ft = ['typescript']

[[plugins]]
repo = 'elzr/vim-json'
on_ft = ['json']

[[plugins]]
repo = 'neoclide/coc.nvim'
merged = 0
rev = 'release'
hook_add = '''
" if hidden is not set, TextEdit might fail.
set hidden
" Use tab for trigger completion with characters ahead and navigate.
" Use command ':verbose imap <tab>' to make sure tab is not mapped by other plugin.
inoremap <silent><expr> <TAB>
      \ pumvisible() ? "\<C-n>" :
      \ <SID>check_back_space() ? "\<TAB>" :
      \ coc#refresh()
inoremap <expr><S-TAB> pumvisible() ? "\<C-p>" : "\<C-h>"

function! s:check_back_space() abort
  let col = col('.') - 1
  return !col || getline('.')[col - 1]  =~# '\s'
endfunction

nmap <silent> <leader>[ <Plug>(coc-definition)
nmap <silent> gy <Plug>(coc-type-definition)
nmap <silent> gi <Plug>(coc-implementation)
nmap <silent> <leader>] <Plug>(coc-references)
" Remap for rename current word
nmap <leader>r <Plug>(coc-rename)
" Remap for do codeAction of current line
nmap <leader>i  <Plug>(coc-codeaction)

" Start coc.nvim when vim launches
au VimEnter * CocStart
'''
hook_post_update = '''
CocInstall coc-tsserver
CocInstall coc-angular
CocInstall coc-prettier
CocInstall coc-json
CocInstall coc-html
CocInstall coc-css
'''

